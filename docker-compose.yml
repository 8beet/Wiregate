version: "3"

networks:
  private_network:
    ipam:
      driver: default
      config:
        - subnet: 10.2.0.0/24

services:
  unbound:
    image: "klutchell/unbound:latest"
    container_name: unbound
    restart: unless-stopped
    hostname: "unbound"
    networks:
      private_network:
        ipv4_address: 10.2.0.200

  wg_dashboard:
    image: noxcis/wg-dashboard:latest
    container_name: wg_dashboard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    restart: unless-stopped
    volumes:
      - ./WG-Dash/config:/etc/wireguard
    environment:
      - SERVER_IP=172.30.155.189
      - CONFIG_CT=1
    ports:
      - 10086:10086
      - 51820:51820/udp
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      private_network:
        ipv4_address: 10.2.0.3

  pihole:
    depends_on: [unbound]
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    hostname: pihole
    dns:
      - 127.0.0.1
      - 10.2.0.200 # Points to unbound
    environment:
      TZ: "America/Chicago"
      WEBPASSWORD: ""
      ServerIP: 10.2.0.100 # Internal IP of pihole
      DNS1: 10.2.0.200 # Unbound IP
      DNS2: 10.2.0.200 # If we don't specify two, it will auto pick google.
    volumes:
      - "./etc-pihole/:/etc/pihole/"
      - "./etc-dnsmasq.d/:/etc/dnsmasq.d/"
    cap_add:
      - NET_ADMIN
    networks:
      private_network:
        ipv4_address: 10.2.0.100
  
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      private_network:
        ipv4_address: 10.2.0.6
    dns:
      - 127.0.0.1
      - 10.2.0.200

  nginx:
    container_name: nginx-pm
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      # Public HTTP Port:
      - '80:80'
      # Public HTTPS Port:
      - '443:443'
      # Admin Web Port:
      - '81:81'
    environment:
      DB_SQLITE_FILE: "/data/database.sqlite"
      # Uncomment this if IPv6 is not enabled on your host
      DISABLE_IPV6: 'true'
    volumes:
      - ./data/nginx-proxy-manager:/data
      - ./letsencrypt:/etc/letsencrypt
      - ./web:/var/www/html
    networks:
      private_network:
        ipv4_address: 10.2.0.4
    dns:
      - 127.0.0.1
      - 10.2.0.200

  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    ports:
      - 8000:8000
      - 9000:9000
    environment:
      - SERVER_IP=172.30.155.189
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
    networks:
      private_network:
        ipv4_address: 10.2.0.5
    dns:
      - 127.0.0.1
      - 10.2.0.200

volumes:
  portainer_data:
