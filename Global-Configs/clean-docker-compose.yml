
version: "3"

networks:
  private_network:
    ipam:
      driver: default
      config:
        - subnet: 10.2.0.0/24

services:

  wg_dashboard:
    depends_on: [unbound, pihole]
    build: ./WG-Dash
    #image: noxcis/wg-dashboard:moray-multi-arch
    container_name: wg_dashboard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    restart: unless-stopped
    volumes:
      - ./WG-Dash/master-key:/home/app/master-key
    environment:
      - SERVER_IP=${SERVER_IP}
      - CONFIG_CT=${INTERFACE_COUNT}
      - START_PORT=${PORT_RANGE_START}
    ports:
      - "${PORT_MAPPINGS}"
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      private_network:
        ipv4_address: 10.2.0.3

  unbound:
    image: "klutchell/unbound:latest"
    container_name: unbound
    restart: unless-stopped
    hostname: "unbound"
    volumes:
      - ./Global-Configs/Unbound/custom-unbound.conf:/etc/unbound/custom.conf.d/custom-unbound.conf
      - ./Global-Configs/Unbound/root.hints:/etc/unbound/root.hints
    networks:
      private_network:
        ipv4_address: 10.2.0.200
    healthcheck:
      test: ["CMD", "dig", "-p", "53", "dnssec.works", "@127.0.0.1"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s

  pihole:
    depends_on: [unbound]
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    hostname: pihole
    dns:
      - 10.2.0.200 # Points to unbound
    environment:
      TZ: "America/Chicago"
      WEBPASSWORD: ${PI_HOLE_PASS} 
      ServerIP: 10.2.0.100 # Internal IP of pihole
      DNS1: 10.2.0.200 # Unbound IP
      DNS2: 10.2.0.200 # If we don't specify two, it will auto pick google.
    volumes:
      - "./Global-Configs/Pihole/etc-pihole/:/etc/pihole/"
      - "./Global-Configs/Pihole/etc-dnsmasq.d/:/etc/dnsmasq.d/"
    cap_add:
      - NET_ADMIN
    networks:
      private_network:
        ipv4_address: 10.2.0.100

  channels:
    depends_on: [db, wg_dashboard]
    #image: noxcis/worm-hole-channels:beta-2
    build: ./Channels/web
    command: python run.py
    environment:
      - IS_DOCKER=1
      - FLASK_APP=app/__init__.py
      - FLASK_ENV=development
      - SQL_HOST=db
      - SQL_PORT=5432
      - DATABASE=postgres
      - SECRET_KEY=${MSG_SECRET_KEY}
      - DATABASE_URI=postgresql://user:password@db:5432/db
    networks:
      private_network:
        ipv4_address: 10.2.0.4
    

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${MSG_DB_USER}
      - POSTGRES_PASSWORD=${MSG_DB_PASS}
      - POSTGRES_DB=db
    networks:
      private_network:
        ipv4_address: 10.2.0.5

volumes:
    postgres_data:
  
