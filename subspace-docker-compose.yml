
version: "3"

networks:
  private_network:
    ipam:
      driver: default
      config:
        - subnet: 10.2.0.0/24


services:
  unbound:
    image: "klutchell/unbound:latest"
    container_name: unbound
    restart: unless-stopped
    hostname: "unbound"
    volumes:
      - ./pi-hole.conf:/etc/unbound/custom.conf.d/pi-hole.conf
    networks:
      private_network:
        ipv4_address: 10.2.0.200
    
  subspace:
   image: subspacecommunity/subspace:latest
   container_name: subspace
   volumes:
    - /opt/docker/subspace:/data
    - /opt/docker/dnsmasq:/etc/dnsmasq.d
   restart: always
   environment:
    - SUBSPACE_HTTP_HOST=127.0.0.1
    - SUBSPACE_LETSENCRYPT=true
    - SUBSPACE_HTTP_INSECURE=false
    - SUBSPACE_HTTP_ADDR=":80"
    - SUBSPACE_NAMESERVERS=1.1.1.1,8.8.8.8
    - SUBSPACE_LISTENPORT=51820
    - SUBSPACE_IPV4_POOL=10.99.97.0/24
    - SUBSPACE_IPV6_POOL=fd00::10:97:0/64
    - SUBSPACE_IPV4_GW=10.99.97.1
    - SUBSPACE_IPV6_GW=fd00::10:97:1
    - SUBSPACE_IPV6_NAT_ENABLED=1
    - SUBSPACE_DISABLE_DNS=0
    - SUBSPACE_PERSISTENT_KEEPALIVE=20

      



  pihole:
    depends_on: [unbound]
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    hostname: pihole
    dns:
      - 10.2.0.200 # Points to unbound
    environment:
      TZ: "America/Chicago"
      WEBPASSWORD: ""
      ServerIP: 10.2.0.100 # Internal IP of pihole
      DNS1: 10.2.0.200 # Unbound IP
      DNS2: 10.2.0.200 # If we don't specify two, it will auto pick google.
    volumes:
      - "./etc-pihole/:/etc/pihole/"
      - "./etc-dnsmasq.d/:/etc/dnsmasq.d/"

    networks:
      private_network:
        ipv4_address: 10.2.0.100
  
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      private_network:
        ipv4_address: 10.2.0.6
    dns:
      - 10.2.0.200
      

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./web/:/var/www/html/
    restart: unless-stopped
    networks:
      private_network:
        ipv4_address: 10.2.0.4
    dns:
      - 10.2.0.200

  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    #ports:
      #- 8000:8000
      #- 9000:9000
    environment:
      - SERVER_IP=172.30.155.189
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: always
    networks:
      private_network:
        ipv4_address: 10.2.0.5
    dns:
      - 10.2.0.200

volumes:
  portainer_data:
